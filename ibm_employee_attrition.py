# -*- coding: utf-8 -*-
"""IBM Employee Attrition.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1d9PACCCYbTESCxMDKxIjyuT_ZNggM7lW
"""

import pandas as pd
import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt

from google.colab import files
uploaded = files.upload()

df = pd.read_csv('WA_Fn-UseC_-HR-Employee-Attrition.csv')

df

df.shape

df.dtypes

df.isna().sum()

df.describe()

df['Attrition'].value_counts()

sns.countplot(df['Attrition'])
# Model needs to be with more than  
(1233 - 237)/1233
# accuracy

plt.figure(figsize=(12,4))
 sns.countplot(x='Age', hue='Attrition', data=df)

for column in df.columns:
  if df[column].dtype == object:
    print(str(column) + ' : ' + str(df[column].unique()))
    print(df[column].value_counts())
    print('---------------------------------')

df = df.drop('Over18', axis=1)
df = df.drop('EmployeeNumber', axis=1)
df = df.drop('StandardHours', axis=1)

df = df.drop('EmployeeCount', axis=1)

df.corr()

plt.figure(figsize=(14,14))
sns.heatmap(df.corr(),annot=True, fmt='.0%')

# Non-numeric - numeric
from sklearn.preprocessing import LabelEncoder
le = LabelEncoder()

for column in df.columns:
  if df[column].dtype == np.number:
    continue
  df[column] = le.fit_transform(df[column])

df

df['Age_years'] = df['Age']

df = df.drop('Age', axis=1)

df

# Split x and y

X = df.iloc[:, 1:df.shape[1]].values
Y = df.iloc[:, 0]

# Split into train test

from sklearn.model_selection import train_test_split

X_train, X_test, Y_train, Y_test = train_test_split(X, Y, test_size=0.25, random_state=0)

# Random Forest

from sklearn.ensemble import RandomForestClassifier

forest = RandomForestClassifier(n_estimators=10, criterion='entropy', random_state=0)

forest.fit(X_train, Y_train)

forest.score(X_train, Y_train)

from sklearn.metrics import confusion_matrix, accuracy_score
cm = confusion_matrix(Y_test, forest.predict(X_test))

cm

(cm[0][0] + cm[1][1])/(cm[0][0] + cm[1][0] + cm[0][1] + cm[1][1])

